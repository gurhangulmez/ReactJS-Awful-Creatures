{"version":3,"sources":["components/card-component/card-component.jsx","components/card-list/card-list-component.jsx","components/search-box-component/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","creature","id","name","email","CardList","creatures","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchText","fetch","then","response","json","users","setState","this","filteredCreatures","filter","toLowerCase","includes","e","target","value","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,SAASC,GAAzC,eACR,6BAA6BJ,EAAMG,SAASE,MAAnCL,EAAMG,SAASC,IACxB,4BAAIJ,EAAMG,SAASG,YCJZC,EAAW,SAACP,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMQ,UAAUC,KAAI,SAACN,GAAD,OACnB,cAAC,EAAD,CAAMA,SAAUA,UCLXO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEC,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCDG,E,kDAxCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,UAAW,GACXS,WAAY,IALF,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEf,UAAWc,S,oBAGhD,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/BR,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,WACbQ,EAAoBjB,EAAUkB,QAAO,SAACvB,GAAD,OACzCA,EAASE,KAAKsB,cAAcC,SAASX,EAAWU,kBAGlD,OACE,sBAAK1B,UAAU,MAAf,UACE,cAAC,EAAD,CACEU,YAAY,qBACZC,aAAc,SAACiB,GACb,EAAKN,SAAS,CAAEN,WAAYY,EAAEC,OAAOC,QAAS,kBAC5CC,QAAQC,IAAIJ,EAAEC,OAAOC,aAI3B,cAAC,EAAD,CACE9B,UAAU,YACVO,UAAWiB,W,GAlCHS,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.66076430.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${props.creature.id}?set=set4`}></img>\r\n      <h1 key={props.creature.id}>{props.creature.name}</h1>\r\n      <p>{props.creature.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card-component/card-component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.creatures.map((creature) => (\r\n        <Card creature={creature}></Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box-style.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    ></input>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list-component\";\nimport { SearchBox } from \"./components/search-box-component/search-box-component.jsx\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      creatures: [],\n      searchText: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ creatures: users }));\n  }\n\n  render() {\n    const { creatures, searchText } = this.state;\n    const filteredCreatures = creatures.filter((creature) =>\n      creature.name.toLowerCase().includes(searchText.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <SearchBox\n          placeholder=\"search the monster\"\n          handleChange={(e) => {\n            this.setState({ searchText: e.target.value }, () =>\n              console.log(e.target.value)\n            );\n          }}\n        ></SearchBox>\n        <CardList\n          className=\"card-list\"\n          creatures={filteredCreatures}\n        ></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}